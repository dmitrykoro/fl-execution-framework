name: CI Pipeline

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('tests/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests (parallel)
      run: |
        pytest -n auto tests/unit/ --cov=src --cov-report=term-missing --tb=short

    - name: Run integration tests (serial)
      run: |
        pytest -n 0 tests/integration/ --cov=src --cov-append --tb=short

    - name: Run performance tests (serial)
      run: |
        pytest -n 0 tests/performance/ --cov=src --cov-append --tb=short

    - name: Generate coverage report
      run: |
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false