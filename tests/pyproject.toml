[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fl-execution-framework-tests"
version = "0.1.0"
dependencies = [
    # Testing framework
    "pytest==8.3.3",
    "pytest-cov==5.0.0",
    "pytest-mock==3.14.0",
    "pytest-xdist==3.5.0",

    # Type checking and linting
    "mypy==1.13.0",
    "black==24.10.0",
    "flake8==7.1.1",
    "isort==5.13.2",

    # Core ML/DL stack
    "numpy==1.26.4",
    "torch==2.6.0",
    "torchvision==0.21.0",
    "scikit-learn==1.5.0",

    # Federated learning
    "flwr==1.9.0",
    "peft==0.17.1",
    "transformers==4.56.1",
    "datasets==2.20.0",

    # Utilities and visualization
    "matplotlib==3.5.2",
    "opencv-python==4.11.0.86",
    "pillow==10.4.0",
    "jsonschema==4.22.0",
]

[tool.setuptools]
packages = []

[tool.isort]
profile = "black"
src_paths = ["."]

[tool.mypy]
# Test-focused type checking
warn_return_any = false
warn_unused_configs = true
show_error_codes = true
no_implicit_optional = false

# Third-party library handling
ignore_missing_imports = true

# Skip src/ imports - tests only
follow_imports = "skip"
ignore_errors = true

# Lenient checking for test code
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false

# Disable style warnings
warn_redundant_casts = false
warn_unused_ignores = false

# Check test directories only
files = [
    "tests/conftest.py",
    "tests/fixtures/",
    "tests/integration/",
    "tests/unit/",
    "tests/performance/"
]

# Skip type reference files
exclude = [
    "tests/type_definitions/"
]
